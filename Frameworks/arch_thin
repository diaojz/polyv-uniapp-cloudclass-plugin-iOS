#!/bin/bash
# -------------------------------------------------------------------------------
# Date:     2021/01/13
# Author:   MissYasiky
# Description: 该脚本用于移除 framework 的模拟器架构
# -------------------------------------------------------------------------------

SOURCE="$0"
while [ -h "$SOURCE"  ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE"  )" && pwd  )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /*  ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
CURRENT_PATH="$( cd -P "$( dirname "$SOURCE"  )" && pwd  )"

function remove_arch(){
  file_name=$1
  arch_name=$2
  output_file_name="${file_name}_output"
  lipo -remove ${arch_name} ${file_name}  -output ${output_file_name}
  if [ -e $output_file_name ]; then
    cp -R ${output_file_name} ${file_name}
    rm -r ${output_file_name}
  fi
}

function handle_framework(){
  for file in `ls $1` #注意此处这是两个反引号，表示运行系统命令
  do
    dir_or_file=$1"/"$file
    if [ ! -d ${dir_or_file} ]&&[ ! "${dir_or_file##*.}"x = "plist"x ];then
      echo "处理前："
      lipo -info ${dir_or_file}
      echo "----------开始处理----------"
      remove_arch ${dir_or_file} "i386"
      remove_arch ${dir_or_file} "x86_64"
      remove_arch ${dir_or_file} "armv7s"
      echo "----------处理完毕----------"
      lipo -info ${dir_or_file}
    fi
  done
}

function read_dir(){
  for file in `ls $1` #注意此处这是两个反引号，表示运行系统命令
  do
    dir_or_file=$1"/"$file
    file_name=${dir_or_file##*/}
    if [ "${dir_or_file##*.}"x = "framework"x ] # ##*. 表示从左边开始删除最右边.号及左边的所有字符
    then
      read -p "⌨️  是否处理文件 ${file_name}（处理-y): " need_handler
      if [ -n "${need_handler}" ]&&[ ${need_handler} == 'y' ]; then
        handle_framework ${dir_or_file}
      fi
    else 
      echo "文件 ${file_name} 不符合要求"
    fi
    echo ""
  done
} 

read_dir ${CURRENT_PATH} # lipo -remove armv7 ~/the/path/xxx.a -output ~/the/new/path/xxx.a